@model BusinessModels.DashBoardModel

@{
    ViewBag.Title = "NewOrder";
}

<h2>NewOrder</h2>

@using (Html.BeginForm("PlaceOrder", "Some", FormMethod.Post, new { id = "frmPlaceOrder" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DashBoardModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductName, Model.ListOfProductId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
            
        <div class="form-group">
            @Html.LabelFor(model => model.StoreName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StoreName, Model.ListOfStoreId,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Items, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Items, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Items, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="lblPrice">
                @Html.DisplayFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @Id = "lblPrice" } })
                @Html.HiddenFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @Id = "hdnPrice" } })
                @Html.HiddenFor(model => model.OrderStatus, new { htmlAttributes = new { @class = "form-control", @Id = "hdnPrice" } })




            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Place Order" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#OrderStatus").val('O');

        $("#Items").on('change', function() {
            var cost = parseInt($("#Items").val());
            var unitPrice = parseInt($('#ProductName').val());
            $("#lblPrice").html(cost * unitPrice);
            $("#hdnPrice").val(cost * unitPrice);

            
        });
    });
</script>
<div>
    @Html.ActionLink("Back to List", "DashBoard")
</div>
